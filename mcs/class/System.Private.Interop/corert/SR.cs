//
// This file was generated by resx2sr tool
//

partial class SR
{
	public const string Arg_InvalidANSIString = "The ANSI string passed in could not be converted from the default ANSI code page to Unicode.";
	public const string Arg_InvalidComObjectException = "Attempt has been made to use a COM object that does not have a backing class factory.";
	public const string Arg_InvalidHandle = "Invalid handle.";
	public const string Arg_InvalidOleVariantTypeException = "Specified OLE variant was invalid.";
	public const string Arg_VariantTypeNotSupported = "Marshal for the specified variant type {0} not supported.";
	public const string Arg_InvalidThreshold = "maximumThreshold cannot be less than initialThreshold.";
	public const string Arg_MustBeDecimal = "Object must be of type Decimal.";
	public const string Arg_MustBeInt32 = "Object must be of type Int32.";
	public const string Arg_MustBeStringPtrNotAtom = "The pointer passed in as a String must not be in the bottom 64K of the process's address space.";
	public const string Arg_NeedNonNegNumRequired = "Non-negative number required.";
	public const string Arg_NotIsomorphic = "Object contains non-primitive or non-blittable data.";
	public const string Arg_SafeArrayRankMismatchException = "Specified array was not of the expected rank.";
	public const string Arg_SafeArrayTypeMismatchException = "Specified array was not of the expected type.";
	public const string Arg_SizeOfNoTypeSizeInfo = "Marshal.SizeOf may only be used with blittable types and types used in the generic SizeOf<T> overload methods.";
	public const string Arg_SizeOfNonValueType = "Marshal.SizeOf may only be used with value types.";
	public const string Argument_AddingDuplicate = "An item with the same key has already been added.";
	public const string Argument_NeedNonGenericType = "The specified Type must not be a generic type definition.";
	public const string Argument_ObjNotComObject = "The object's type must be __ComObject or derived from __ComObject.";
	public const string ArgumentNull_Buffer = "Buffer cannot be null.";
	public const string ArgumentOutOfRange_NeedNonNegNum = "Non-negative number required.";
	public const string Null_HString = "Null strings may not be marshaled in Windows Runtime arguments.";
	public const string BadMarshalField_Null_HString = "Null strings may not be marshaled in Windows Runtime fields.";
	public const string ArrayWithOffsetOverflow = "ArrayWithOffset: offset exceeds array size.";
	public const string InvalidOperation_HCCountOverflow = "Handle collector count overflows or underflows.";
	public const string StructArrayTooLarge = "Array size exceeds addressing limitations.";
	public const string CustomPropertyProvider_DataBindingError = "Failed to bind to property '{0}'.  {1}";
	public const string CustomPropertyProvider_MissingMetadata = "Failed to bind to property '{0}'.  {1}";
	public const string Arg_GetMethNotFnd = "Property Get method not found.";
	public const string Arg_SetMethNotFnd = "Property Set method not found.";
	public const string Arg_MethodAccessException_WithMethodName = "Attempt to access the method '{0}' on type '{1}' failed.";
	public const string Arg_RemovedTypeInstantiated = "A type that was removed by MCG dependency reduction has been instantiated.";
	public const string Arg_NotImplementedInNonCoreApiSet = "{0} is not implemented for non-CORE_API_SET builds.";
	public const string Arg_DelegateTypeNotRecognized = "Delegate type is not recognized.";
	public const string Arg_NoMarshalCreatedObjectUsedOutOfTreadContext = "The Windows Runtime Object can only be used in the threading context where it was created, because it implements INoMarshal or has MarshalingBehaviorAttribute(MarshalingType.None) set.";
	public const string Arg_UnexpectedTypeKind = "Unexpected TypeKind.";
	public const string Arg_UnrecognizedTypeName = "Unrecognized type name.";
	public const string Arg_InvalidCustomTypeNameValue = "Invalid custom TypeName value.";
	public const string Argument_MustHaveLayoutOrBeBlittable = "The specified structure '{0}' must be blittable or have layout information.";
	public const string TypeNameMarshalling_MissingMetadata = "Failed to marshal System.Type instance using metadata information. {0}";
	public const string Excep_EnumNotStarted = "Enum Not Started";
	public const string Excep_EnumEnded = "Enum ended";
	public const string Excep_EnumFailedVersion = "Collection was modified; enumeration operation may not execute.";
	public const string Excep_NotSupported = "Not supported exception.";
	public const string Excep_CollectionBackingListTooLarge = "Collection backing list too large";
	public const string Excep_KeyNotFound = "The given key was not present in the dictionary.";
	public const string Excep_KeyCollectionSet = "Key collection set.";
	public const string Excep_ValueCollectionSet = "Value collection set.";
	public const string Excep_InsufficientSpaceToCopyCollection = "Insufficient space to copy collection.";
	public const string Excep_IndexOutOfArrayBounds = "Index out of array bounds.";
	public const string Excep_CannotRemoveFromEmptyCollection = "Cannot remove from empty collection.";
	public const string Excep_IndexLargerThanMaxValue = "Index larger than max value.";
	public const string Excep_IndexOutOfRange = "The specified index is outside the current index range of this collection.";
	public const string Excep_AddingDuplicate = "Adding duplicate.";
	public const string Excep_FromHResult = "Exception from HRESULT:";
	public const string Excep_InvalidMarshalAs_Param = "Incompatible MarshalAs detected in parameter named '{0}'. Please refer to MCG's warning message for more information.";
	public const string Excep_InvalidMarshalAs_Field = "Incompatible MarshalAs detected in field named '{0}'. Please refer to MCG's warning message for more information.";
	public const string Excep_InvalidMarshalAs_Return = "Incompatible MarshalAs detected in return value. Please refer to MCG's warning message for more information.";
	public const string Excep_InvalidComObject_NoRCW_Wrapper = "COM object that has been separated from its underlying RCW cannot be used.";
	public const string StructMarshalling_MissingInteropData = "{0} is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965";
	public const string DelegateMarshalling_MissingInteropData = "{0} is missing delegate marshalling data. To enable delegate marshalling data, add a MarshalDelegate directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965";
	public const string ComTypeMarshalling_MissingInteropData = "{0} is missing interop type marshalling data. To enable interop type marshalling data, add a MarshalObject directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965";
	public const string Not_Enough_Thunks = "The maximum number of live delegates have been marshaled to function pointers. More aggressively freeing delegate instances that have been marshaled may resolve this problem. Please notify Microsoft that you have encountered this error.";
	public const string Arg_NativeToManagedCall = "Function has a parameter or return value of SafeHandle. Marshalling between a Windows HANDLE and .NET SafeHandle is not supported when a method is called from native code.";
	public const string Arg_NeedsDefaultCtor = "'{0}' does not have a default constructor. Subclasses of SafeHandle must have a default constructor to support marshaling a Windows HANDLE into managed code.";
	public const string Arg_OutSafeHandleAsFieldNotSupported = "Marshalling a Windows HANDLE to .NET SafeHandle within a structure field is not currently supported.";
	public const string PropertyValue_InvalidCoersion = "Object in an IPropertyValue is of type '{0}' with value '{1}', which cannot be converted to a '{2}'.";
	public const string PropertyValue_InvalidCast = "Object in an IPropertyValue is of type '{0}', which cannot be converted to a '{1}'.";
	public const string Arg_MustBeDelegateType = "Type must derive from Delegate.";
	public const string Arg_CriticalHandleCannotBeAbstract = "'{0}' is abstract. CriticalHandle types must not be abstract to support marshaling CriticalHandles into managed code.";
	public const string Arg_CriticalHandleMustHaveDefaultCtor = "'{0}' does not have a default constructor. CriticalHandle types must have a default constructor to support marshaling CriticalHandles into managed code.";
	public const string Arg_CriticalHandleReverse = "CriticalHandle types cannot be used in signatures of methods called from native code.";
	public const string Arg_OutCriticalHandleAsFieldNotSupported = "Marshalling a Windows HANDLE to .NET CriticalHandle within a structure field is not currently supported.";
	public const string Argument_OffsetOfFieldNotFound = "Field passed in is not a marshaled member of the type '{0}'.";
	public const string Argument_StructMustNotBeValueClass = "The structure must not be a value class.";
	public const string Argument_NeedNonGenericObject = "The specified object must not be an instance of a generic type.";
	public const string InvalidCast_WinRT = "Unable to cast object of type '{0}' to type '{1}'.";
	public const string InvalidCast_Com = "Unable to cast COM object of type '{0}' to interface type '{1}'. This operation failed because the QueryInterface call on the COM component for the interface with IID '{2}' failed due to the following error: {3}.";
	public const string MissingMetadataType = "Unknown (Missing metadata for type)";
	public const string DirectUI_Empty = "Empty.";
	public const string PInvoke_GetProcAddress_NoName = "A library name must be specified in a DllImport attribute applied to non-IJW methods.";
	public const string PInvoke_LoadLib = "Unable to load DLL '{0}': {1}";
	public const string PInvoke_GetProcAddress = "Unable to find an entry point named '{0}' in DLL '{1}'.";
	public const string TypeNotDelegate = "'Type '{0}' is not a delegate type.  EventTokenTable may only be used with delegate types.'";
	public const string WrongSizeArrayInNStruct = "Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout.";
	public const string Arg_InteropMarshalUnmappableChar = "Cannot marshal: Encountered unmappable character.";
}
