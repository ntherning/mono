if(NOT MONO_PATH)
  message(FATAL_ERROR "Missing -DMONO_PATH=...")
endif()
if(NOT MONO_EXECUTABLE)
  message(FATAL_ERROR "Missing -DMONO_EXECUTABLE=...")
endif()
if(NOT MONO_CFG_DIR)
  message(FATAL_ERROR "Missing -DMONO_CFG_DIR=...")
endif()
if(NOT FILE)
  message(FATAL_ERROR "Missing -DFILE=...")
endif()

# When cmake is run using -P CYGWIN and some other variables won't be set. We need to detect cygwin ourselves.
if(IS_DIRECTORY "/cygdrive")
	set(CYGWIN YES)
endif()

set(TMP_FILE "${FILE}.tmp")

if(CMAKE_HOST_WIN32)
	file(TO_NATIVE_PATH "${MONO_PATH}" MP)
	file(TO_NATIVE_PATH "${MONO_CFG_DIR}" MCD)
	file(TO_NATIVE_PATH "${MONO_EXECUTABLE}" ME)
	if(EXE)
		file(TO_NATIVE_PATH "${EXE}" EXE)
		set(EXE "\"${EXE}\"")
	endif()
	file(WRITE  ${TMP_FILE} "@ECHO OFF\n")
	file(APPEND ${TMP_FILE} "SET MONO_PATH=${MP}\n")
	file(APPEND ${TMP_FILE} "SET MONO_CFG_DIR=${MCD}\n")
	file(APPEND ${TMP_FILE} "\"${ME}\" --config \"${MCD}\\mono\\config\" ${EXE} %*\n")
elseif(CYGWIN)
	execute_process(COMMAND cygpath -w -a "${MONO_PATH}" OUTPUT_VARIABLE MP OUTPUT_STRIP_TRAILING_WHITESPACE)
	execute_process(COMMAND cygpath -w -a "${MONO_CFG_DIR}" OUTPUT_VARIABLE MCD OUTPUT_STRIP_TRAILING_WHITESPACE)
	set(ME ${MONO_EXECUTABLE})
	if(EXE)
		execute_process(COMMAND cygpath -w -a "${EXE}" OUTPUT_VARIABLE EXE OUTPUT_STRIP_TRAILING_WHITESPACE)
		set(EXE "'${EXE}'")
	endif()
	file(WRITE ${TMP_FILE} "\#!/bin/bash\n")
	file(APPEND ${TMP_FILE} "export MONO_PATH='${MP}'\n")
	file(APPEND ${TMP_FILE} "export MONO_CFG_DIR='${MCD}'\n")
	file(APPEND ${TMP_FILE} "'${ME}' --config '${MCD}\\mono\\config' ${EXE} \"$@\"\n")
	execute_process(COMMAND chmod +x "${TMP_FILE}")
else()
	# Unix system
	set(MP ${MONO_PATH})
	set(MCD ${MONO_CFG_DIR})
	set(ME ${MONO_EXECUTABLE})
	if(EXE)
		set(EXE "'${EXE}'")
	endif()
	file(WRITE ${TMP_FILE} "\#!/bin/bash\n")
	file(APPEND ${TMP_FILE} "export MONO_PATH='${MP}'\n")
	file(APPEND ${TMP_FILE} "export MONO_CFG_DIR='${MCD}'\n")
	file(APPEND ${TMP_FILE} "'${ME}' --config '${MCD}/mono/config' ${EXE} \"$@\"\n")
	execute_process(COMMAND chmod +x "${TMP_FILE}")
endif()

execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${TMP_FILE} ${FILE})
file(REMOVE ${TMP_FILE})
